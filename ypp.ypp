%{
#include "hpp.hpp"
%}
%defines %union { Sym*o; }
%token <o> SYM
%token <o> LP RP LQ RQ
%token <o> OP COLON GG
%type <o> ex scalar vector
%%
REPL : | REPL ex { cout << $2->eval()->dump() <<endl; } ;
scalar : SYM ;
ex : scalar
	| LP ex RP			{ $$=$2; }
	| LQ vector RQ		{ $$=$2; }
	| ex COLON ex GG ex	{ $$=new Dep($1,$3,$5); }
	| ex OP ex			{ $$=$2; $$->push($1); $$->push($3); }
;
vector :				{ $$=new Vector(); }
	| vector ex			{ $$=$1; $$->push($2); }
;
%%